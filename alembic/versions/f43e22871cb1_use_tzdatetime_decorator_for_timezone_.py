"""Use TZDateTime decorator for timezone support

Revision ID: f43e22871cb1
Revises: 001
Create Date: 2025-10-12 19:07:27.152645

"""

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = "f43e22871cb1"
down_revision = "001"
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column(
        "contest",
        "start_date",
        existing_type=sa.DATETIME(),
        type_=sa.String(length=64),
        existing_nullable=False,
    )
    op.alter_column(
        "contest",
        "end_date",
        existing_type=sa.DATETIME(),
        type_=sa.String(length=64),
        existing_nullable=False,
    )
    op.alter_column(
        "match",
        "scheduled_time",
        existing_type=sa.DATETIME(),
        type_=sa.String(length=64),
        existing_nullable=False,
    )
    op.alter_column(
        "pick",
        "timestamp",
        existing_type=sa.DATETIME(),
        type_=sa.String(length=64),
        existing_nullable=False,
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column(
        "pick",
        "timestamp",
        existing_type=sa.String(length=64),
        type_=sa.DATETIME(),
        existing_nullable=False,
    )
    op.alter_column(
        "match",
        "scheduled_time",
        existing_type=sa.String(length=64),
        type_=sa.DATETIME(),
        existing_nullable=False,
    )
    op.alter_column(
        "contest",
        "end_date",
        existing_type=sa.String(length=64),
        type_=sa.DATETIME(),
        existing_nullable=False,
    )
    op.alter_column(
        "contest",
        "start_date",
        existing_type=sa.String(length=64),
        type_=sa.DATETIME(),
        existing_nullable=False,
    )
    # ### end Alembic commands ###
